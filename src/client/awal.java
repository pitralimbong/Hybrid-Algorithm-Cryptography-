/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import java.math.BigInteger;
import java.util.Random;

/**
 *
 * @author limbo
 */
public class awal extends javax.swing.JFrame {

    /**
     * Creates new form awal
     */
    public awal() {
        initComponents();
        bit2.setEnabled(false);
        bit.setEnabled(false);
        
    }

    public int nomorbaru;
    public int nomorbaru2;
    static int myVarible;
    public BigInteger pEl;
    public BigInteger x;
    public BigInteger g, p, q, n, e, phi_n, d, b,k;
    public BigInteger y;
    double convert;
    int pilih,pilih2;
    
    BigInteger modulo,modulo2,u,u_a;
    int panjang_bit2 =200000;
    int panjang_bit4 =32;
    

    //int panjang_bit=16;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        bit2 = new javax.swing.JComboBox<>();
        bit = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bit2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "8 Bit", "16 Bit", "24 Bit", "32 Bit" }));
        bit2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bit2ActionPerformed(evt);
            }
        });

        bit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "8 Bit", "16 Bit", "24 Bit", "32 Bit" }));
        bit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bitActionPerformed(evt);
            }
        });

        jButton1.setText("Generate");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText("El Gamal - RSA");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton4);
        jRadioButton4.setText("El Gamal - SRNN");
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton3)
                            .addComponent(jRadioButton4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 152, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bit, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bit2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(31, 31, 31))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bit2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButton3))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton4)
                    .addComponent(bit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bitActionPerformed
        // TODO add your handling code here:
        int number = bit.getSelectedIndex();
        if (number == 0) {
            nomorbaru2 = 8;
        } else if (number == 1) {
            nomorbaru2 = 16;
        } else if (number == 2) {
            nomorbaru2 = 24;
        } else if (number == 3) {
            nomorbaru2 = 32;
        }
         pilih=2;
    }//GEN-LAST:event_bitActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(pilih==0){
            
            keyGeneration(nomorbaru);
            new ClientWithGUI(convert, p, q, n, e, d, y, pEl, x, g).setVisible(true);
            this.dispose();
        }else if(pilih==2){
        
            keyGeneration2(nomorbaru2);
            new ClientWithGUI2(convert, p, q, n, e, d,u_a, y, pEl, x, g).setVisible(true);
            this.dispose();
        }
        

    }//GEN-LAST:event_jButton1ActionPerformed

    private void bit2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bit2ActionPerformed

        int number = bit2.getSelectedIndex();
        if (number == 0) {
            nomorbaru = 8;
        } else if (number == 1) {
            nomorbaru = 16;
        } else if (number == 2) {
            nomorbaru = 24;
        } else if (number == 3) {
            nomorbaru = 32;
        }
        pilih=0;

    }//GEN-LAST:event_bit2ActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
        // TODO add your handling code here:
        bit.setEnabled(true);
        bit2.setEnabled(false);
        
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
        bit2.setEnabled(true);
        bit.setEnabled(false);
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    public void keyGeneration(int panjang_bit) {
        double start = System.nanoTime();
        while (true) {
            p = new BigInteger(panjang_bit, 10, new Random());
            q = new BigInteger(panjang_bit, 10, new Random());
            if (!p.equals(q)) {
                break;
            }
        }
        n = p.multiply(q);
        phi_n = (p.subtract(BigInteger.ONE)).multiply(q.subtract(BigInteger.ONE));
        while (true) {
            e = new BigInteger(panjang_bit, new Random());

            if (e.gcd(phi_n).equals(BigInteger.ONE)) {
                break;
            }
        }
        while (true) {
            pEl = new BigInteger(panjang_bit, 10, new Random());
            if (pEl.compareTo(e) > 0) {
                break;
            }
        }
        //rumus (2.12)
        while (true) {
            x = new BigInteger(panjang_bit - 2, new Random());
            g = new BigInteger(panjang_bit - 2, new Random());

            if (!x.equals(g)) {
                if (!x.equals(e) && !x.equals(d)) {
                    if (!g.equals(e) && !g.equals(d)) {
                        break;
                    }
                }
            }
        }
        d = e.modInverse(phi_n);
        y = g.modPow(x, pEl);
        System.out.println("Nilai P : " + p);
        System.out.println("Nilai Q : " + q);
        System.out.println("Nilai N : " + n);
        System.out.println("Nilai e : " + e);
        System.out.println("Nilai d : " + d);
        System.out.println("Nilai y : " + y);
        System.out.println("Nilai PEL : " + pEl);
        System.out.println("Nilai x : " + x);
        System.out.println("Nilai g : " + g);

        double waktu_pembangkitan_kunci = System.nanoTime() - start;
        convert = waktu_pembangkitan_kunci / 1000000;
        System.out.println("Waktu Generate : " + waktu_pembangkitan_kunci);
        //waktu.setText("Waktu Dekripsi : " + String.valueOf(convert));

    }
    public void keyGeneration2(int panjang_bit){
        modulo = new BigInteger(panjang_bit2, new Random());
        modulo2 = new BigInteger(panjang_bit4, new Random());
        double start = System.nanoTime();
        while (true) {
            p = new BigInteger(panjang_bit, 10, new Random());
            q = new BigInteger(panjang_bit, 10, new Random());
            if (!p.equals(q)) {
                break;
            }
        }
        n = p.multiply(q); 
        phi_n = (p.subtract(BigInteger.ONE)).multiply(q.subtract(BigInteger.ONE));
        while (true) {
            e = new BigInteger(4, new Random());
            if (e.gcd(phi_n).equals(BigInteger.ONE)) {
                break;
            }
        }
        while (true) {
            pEl = new BigInteger(panjang_bit, 10, new Random());
            if (pEl.compareTo(e) > 0) {
                break;
            }
        }
        
        while (true) {
            x = new BigInteger(panjang_bit - 2, new Random());
            g = new BigInteger(panjang_bit - 2, new Random());

            if (!x.equals(g)) {
                if (!x.equals(e) && !x.equals(d)) {
                    if (!g.equals(e) && !g.equals(d)) {
                        break;
                    }
                }
            }
        }
        d = e.modInverse(phi_n);
        u = new BigInteger("2");
        
        k = u.add(BigInteger.ONE);
        
        u_a = u.modPow(k, modulo2);
             
        y = g.modPow(x, pEl); 
        
        System.out.println("Nilai P : " + p);
        System.out.println("Nilai Q : " + q);
        System.out.println("Nilai N : " + n);
        System.out.println("Nilai e : " + e);
        System.out.println("Nilai phi : " + phi_n);
        System.out.println("Nilai d : " + d);
        System.out.println("Nilai u : " + u);
        System.out.println("Nilai a : " + k);
        System.out.println("Nilai u^a :" + u_a);
        System.out.println("Nilai y : " + y);
        System.out.println("Nilai PEL : " + pEl);
        System.out.println("Nilai x : " + x);
        System.out.println("Nilai g : " + g);
        double waktu_pembangkitan_kunci = System.nanoTime() - start;
        convert = waktu_pembangkitan_kunci / 1000000;
        System.out.println("Waktu Generate : " + convert);
 } 

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(awal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(awal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(awal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(awal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new awal().setVisible(true);
                //awal baru = new awal();

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> bit;
    private javax.swing.JComboBox<String> bit2;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButton1;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    // End of variables declaration//GEN-END:variables
}
